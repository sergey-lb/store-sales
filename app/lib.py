def best_store_by_total_sales(weekly_sales):
    """
    >>> best_store_by_total_sales([
    ...    [
    ...       [500_000, 500_000, 200_000],
    ...       [300_000, 500_000, 900_000],
    ...       [100_000, 150_000, 950_000],
    ...       [400_000, 200_000, 500_000, 500_000, 500_000],
    ...       [200_000, 300_000, 500_000, 100_000],
    ...       [250_000, 250_000, 400_000, 780_654],
    ...       [250_000, 250_000, 300_000, 970_815]
    ...    ],
    ...    [
    ...       [20_000, 20_000, 15_000],
    ...       [10_000, 10_000, 54_000],
    ...       [45_000, 78_000, 81_000],
    ...       [69_869, 54_879, 24_983],
    ...       [18_905, 12_841],
    ...       [74_915, 25_000, 44_581],
    ...       [54_000, 32_645, 23_414]
    ...    ],
    ...    [
    ...       [89_715, 20_000, 35_000],
    ...       [56_871, 99_423, 64_891],
    ...       [79_685, 487_963, 45_271, 56_879, 44_981],
    ...       [29_718, 56_919, 14_781],
    ...       [54_023, 22_454],
    ...       [69_874, 23_871, 99_518],
    ...       [55_638, 45_888]]
    ... ])
    [0]

    >>> best_store_by_total_sales([
    ...    [
    ...       [500_000, 500_000, 200_000],
    ...       [300_000, 500_000, 900_000],
    ...       [100_000, 150_000, 950_000],
    ...       [400_000, 200_000, 500_000, 500_000, 500_000],
    ...       [200_000, 300_000, 500_000, 100_000],
    ...       [250_000, 250_000, 400_000, 780_654],
    ...       [250_000, 250_000, 300_000, 970_815]
    ...    ],
    ...    [
    ...       [20_000, 20_000, 15_000],
    ...       [10_000, 10_000, 54_000],
    ...       [45_000, 78_000, 81_000],
    ...       [69_869, 54_879, 24_983],
    ...       [18_905, 12_841],
    ...       [74_915, 25_000, 44_581],
    ...       [54_000, 32_645, 23_414]
    ...    ],
    ...    [
    ...       [250_000, 250_000, 250_000, 250_000, 200_000],
    ...       [150_000, 150_000, 250_000, 250_000, 450_000, 450_000],
    ...       [100_000, 150_000, 300_000, 300_000, 300_000, 50_000],
    ...       [200_000, 200_000, 200_000, 250_000, 250_000, 250_000, 250_000, 250_000, 250_000],
    ...       [200_000, 150_000, 150_000, 250_000, 250_000, 100_000],
    ...       [250_000, 250_000, 200_000, 200_000, 200_000, 200_000, 300_000, 80_654],
    ...       [250_000, 250_000, 150_000, 150_000, 200_000, 200_000, 250_000, 250_000, 70_815]
    ...    ],
    ...    [
    ...       [89_715, 20_000, 35_000],
    ...       [56_871, 99_423, 64_891],
    ...       [79_685, 487_963, 45_271, 56_879, 44_981],
    ...       [29_718, 56_919, 14_781],
    ...       [54_023, 22_454],
    ...       [69_874, 23_871, 99_518],
    ...       [55_638, 45_888]]
    ... ])
    [0, 2]
    """

    best_total_sales = 0;
    for store_sales in weekly_sales:
        store_total_sales = sum(map(sum, store_sales))
        if store_total_sales > best_total_sales:
            best_total_sales = store_total_sales

    result = []
    for i, store_sales in enumerate(weekly_sales):
        if sum(map(sum, store_sales)) == best_total_sales:
            result.append(i)

    return result


def best_store_by_average_sales(weekly_sales):
    """
    >>> best_store_by_average_sales([
    ...    [
    ...       [500_000, 500_000, 200_000],
    ...       [300_000, 500_000, 900_000],
    ...       [100_000, 150_000, 950_000],
    ...       [400_000, 200_000, 500_000, 500_000, 500_000],
    ...       [200_000, 300_000, 500_000, 100_000],
    ...       [250_000, 250_000, 400_000, 780_654],
    ...       [250_000, 250_000, 300_000, 970_815]
    ...    ],
    ...    [
    ...       [20_000, 20_000, 15_000],
    ...       [10_000, 10_000, 54_000],
    ...       [45_000, 78_000, 81_000],
    ...       [69_869, 54_879, 24_983],
    ...       [18_905, 12_841],
    ...       [74_915, 25_000, 44_581],
    ...       [54_000, 32_645, 23_414]
    ...    ],
    ...    [
    ...       [89_715, 20_000, 35_000],
    ...       [56_871, 99_423, 64_891],
    ...       [79_685, 487_963, 45_271, 56_879, 44_981],
    ...       [29_718, 56_919, 14_781],
    ...       [54_023, 22_454],
    ...       [69_874, 23_871, 99_518],
    ...       [55_638, 45_888]]
    ... ])
    [0]

    >>> best_store_by_average_sales([
    ...    [
    ...       [500_000, 500_000, 200_000],
    ...       [300_000, 500_000, 900_000],
    ...       [100_000, 150_000, 950_000],
    ...       [400_000, 200_000, 500_000, 500_000, 500_000],
    ...       [200_000, 300_000, 500_000, 100_000],
    ...       [250_000, 250_000, 400_000, 780_654],
    ...       [250_000, 250_000, 300_000, 970_815]
    ...    ],
    ...    [
    ...       [20_000, 20_000, 15_000],
    ...       [10_000, 10_000, 54_000],
    ...       [45_000, 78_000, 81_000],
    ...       [69_869, 54_879, 24_983],
    ...       [18_905, 12_841],
    ...       [74_915, 25_000, 44_581],
    ...       [54_000, 32_645, 23_414]
    ...    ],
    ...    [
    ...       [250_000, 250_000, 250_000, 250_000, 200_000],
    ...       [150_000, 150_000, 250_000, 250_000, 450_000, 450_000],
    ...       [100_000, 150_000, 300_000, 300_000, 300_000, 50_000],
    ...       [200_000, 200_000, 200_000, 250_000, 250_000, 250_000, 250_000, 250_000, 250_000],
    ...       [200_000, 150_000, 150_000, 250_000, 250_000, 100_000],
    ...       [250_000, 250_000, 200_000, 200_000, 200_000, 200_000, 300_000, 80_654],
    ...       [250_000, 250_000, 150_000, 150_000, 200_000, 200_000, 250_000, 250_000, 70_815]
    ...    ],
    ...    [
    ...       [89_715, 20_000, 35_000],
    ...       [56_871, 99_423, 64_891],
    ...       [79_685, 487_963, 45_271, 56_879, 44_981],
    ...       [29_718, 56_919, 14_781],
    ...       [54_023, 22_454],
    ...       [69_874, 23_871, 99_518],
    ...       [55_638, 45_888]]
    ... ])
    [0]

    >>> best_store_by_average_sales([
    ...    [
    ...       [500_000, 500_000, 200_000],
    ...       [300_000, 500_000, 900_000],
    ...       [100_000, 150_000, 950_000],
    ...       [400_000, 200_000, 500_000, 500_000, 500_000],
    ...       [200_000, 300_000, 500_000, 100_000],
    ...       [250_000, 250_000, 400_000, 780_654],
    ...       [250_000, 250_000, 300_000, 970_815]
    ...    ],
    ...    [
    ...       [20_000, 20_000, 15_000],
    ...       [10_000, 10_000, 54_000],
    ...       [45_000, 78_000, 81_000],
    ...       [69_869, 54_879, 24_983],
    ...       [18_905, 12_841],
    ...       [74_915, 25_000, 44_581],
    ...       [54_000, 32_645, 23_414]
    ...    ],
    ...    [
    ...       [500_000, 500_000, 200_000],
    ...       [300_000, 500_000, 900_000],
    ...       [100_000, 150_000, 950_000],
    ...       [400_000, 200_000, 500_000, 500_000, 500_000],
    ...       [200_000, 300_000, 500_000, 100_000],
    ...       [250_000, 250_000, 400_000, 780_654],
    ...       [250_000, 250_000, 300_000, 970_815]
    ...    ],
    ...    [
    ...       [89_715, 20_000, 35_000],
    ...       [56_871, 99_423, 64_891],
    ...       [79_685, 487_963, 45_271, 56_879, 44_981],
    ...       [29_718, 56_919, 14_781],
    ...       [54_023, 22_454],
    ...       [69_874, 23_871, 99_518],
    ...       [55_638, 45_888]]
    ... ])
    [0, 2]
    """

    best_average_sales = 0;
    for store_sales in weekly_sales:
        for daily_sales in store_sales:
            store_average_sales = sum(daily_sales) / len(daily_sales)
            if store_average_sales > best_average_sales:
                best_average_sales = store_average_sales

    result = []
    for i, store_sales in enumerate(weekly_sales):
        for daily_sales in store_sales:
            store_average_sales = sum(daily_sales) / len(daily_sales)
            if store_average_sales == best_average_sales:
                result.append(i)

    return result


def store_with_best_daily_sales(weekly_sales):
    """
    >>> store_with_best_daily_sales([
    ...    [
    ...       [500_000, 500_000, 200_000],
    ...       [300_000, 500_000, 900_000],
    ...       [100_000, 150_000, 950_000],
    ...       [400_000, 200_000, 500_000, 500_000, 500_000],
    ...       [200_000, 300_000, 500_000, 100_000],
    ...       [250_000, 250_000, 400_000, 780_654],
    ...       [250_000, 250_000, 300_000, 970_815]
    ...    ],
    ...    [
    ...       [20_000, 20_000, 15_000],
    ...       [10_000, 10_000, 54_000],
    ...       [45_000, 78_000, 81_000],
    ...       [69_869, 54_879, 24_983],
    ...       [18_905, 12_841],
    ...       [74_915, 25_000, 44_581],
    ...       [54_000, 32_645, 23_414]
    ...    ],
    ...    [
    ...       [89_715, 20_000, 35_000],
    ...       [56_871, 99_423, 64_891],
    ...       [79_685, 487_963, 45_271, 56_879, 44_981],
    ...       [29_718, 56_919, 14_781],
    ...       [54_023, 22_454],
    ...       [69_874, 23_871, 99_518],
    ...       [55_638, 45_888]]
    ... ])
    [0]

    >>> store_with_best_daily_sales([
    ...    [
    ...       [500_000, 500_000, 200_000],
    ...       [300_000, 500_000, 900_000],
    ...       [100_000, 150_000, 950_000],
    ...       [400_000, 200_000, 500_000, 500_000, 500_000],
    ...       [200_000, 300_000, 500_000, 100_000],
    ...       [250_000, 250_000, 400_000, 780_654],
    ...       [250_000, 250_000, 300_000, 970_815]
    ...    ],
    ...    [
    ...       [20_000, 20_000, 15_000],
    ...       [10_000, 10_000, 54_000],
    ...       [45_000, 78_000, 81_000],
    ...       [69_869, 54_879, 24_983],
    ...       [18_905, 12_841],
    ...       [74_915, 25_000, 44_581],
    ...       [54_000, 32_645, 23_414]
    ...    ],
    ...    [
    ...       [250_000, 250_000, 250_000, 250_000, 200_000],
    ...       [150_000, 150_000, 250_000, 250_000, 450_000, 450_000],
    ...       [100_000, 150_000, 300_000, 300_000, 300_000, 50_000],
    ...       [200_000, 200_000, 200_000, 250_000, 250_000, 250_000, 250_000, 250_000, 250_000],
    ...       [200_000, 150_000, 150_000, 250_000, 250_000, 100_000],
    ...       [250_000, 250_000, 200_000, 200_000, 200_000, 200_000, 300_000, 80_654],
    ...       [250_000, 250_000, 150_000, 150_000, 200_000, 200_000, 250_000, 250_000, 70_815]
    ...    ],
    ...    [
    ...       [89_715, 20_000, 35_000],
    ...       [56_871, 99_423, 64_891],
    ...       [79_685, 487_963, 45_271, 56_879, 44_981],
    ...       [29_718, 56_919, 14_781],
    ...       [54_023, 22_454],
    ...       [69_874, 23_871, 99_518],
    ...       [55_638, 45_888]]
    ... ])
    [0, 2]

    >>> store_with_best_daily_sales([
    ...    [
    ...       [500_000, 500_000, 200_000],
    ...       [300_000, 500_000, 900_000],
    ...       [100_000, 150_000, 950_000],
    ...       [400_000, 200_000, 500_000, 500_000, 500_000],
    ...       [200_000, 300_000, 500_000, 100_000],
    ...       [250_000, 250_000, 400_000, 780_654],
    ...       [250_000, 250_000, 300_000, 970_815]
    ...    ],
    ...    [
    ...       [20_000, 20_000, 15_000],
    ...       [10_000, 10_000, 54_000],
    ...       [45_000, 78_000, 81_000],
    ...       [69_869, 54_879, 24_983],
    ...       [18_905, 12_841],
    ...       [74_915, 25_000, 44_581],
    ...       [54_000, 32_645, 23_414]
    ...    ],
    ...    [
    ...       [250_000, 250_000, 250_000, 250_000, 200_000],
    ...       [150_000, 150_000, 250_000, 250_000, 450_000, 450_000],
    ...       [100_000, 150_000, 300_000, 300_000, 300_000, 50_000],
    ...       [200_000, 200_000, 200_000, 250_000, 250_000, 250_000, 250_000, 250_000, 250_001],
    ...       [200_000, 150_000, 150_000, 250_000, 250_000, 100_000],
    ...       [250_000, 250_000, 200_000, 200_000, 200_000, 200_000, 300_000, 80_654],
    ...       [250_000, 250_000, 150_000, 150_000, 200_000, 200_000, 250_000, 250_000, 70_815]
    ...    ],
    ...    [
    ...       [89_715, 20_000, 35_000],
    ...       [56_871, 99_423, 64_891],
    ...       [79_685, 487_963, 45_271, 56_879, 44_981],
    ...       [29_718, 56_919, 14_781],
    ...       [54_023, 22_454],
    ...       [69_874, 23_871, 99_518],
    ...       [55_638, 45_888]]
    ... ])
    [2]
    """

    best_daily_sales = 0;
    for store_sales in weekly_sales:
        for daily_sales in store_sales:
            daily_sales = sum(daily_sales)
            if daily_sales > best_daily_sales:
                best_daily_sales = daily_sales

    result = []
    for i, store_sales in enumerate(weekly_sales):
        for daily_sales in store_sales:
            daily_sales = sum(daily_sales)
            if daily_sales == best_daily_sales:
                result.append(i)

    return result


def store_with_worst_daily_sales(weekly_sales):
    """
    >>> store_with_worst_daily_sales([
    ...    [
    ...       [500_000, 500_000, 200_000],
    ...       [300_000, 500_000, 900_000],
    ...       [100_000, 150_000, 950_000],
    ...       [400_000, 200_000, 500_000, 500_000, 500_000],
    ...       [200_000, 300_000, 500_000, 100_000],
    ...       [250_000, 250_000, 400_000, 780_654],
    ...       [250_000, 250_000, 300_000, 970_815]
    ...    ],
    ...    [
    ...       [20_000, 20_000, 15_000],
    ...       [10_000, 10_000, 54_000],
    ...       [45_000, 78_000, 81_000],
    ...       [69_869, 54_879, 24_983],
    ...       [18_905, 12_841],
    ...       [74_915, 25_000, 44_581],
    ...       [54_000, 32_645, 23_414]
    ...    ],
    ...    [
    ...       [89_715, 20_000, 35_000],
    ...       [56_871, 99_423, 64_891],
    ...       [79_685, 487_963, 45_271, 56_879, 44_981],
    ...       [29_718, 56_919, 14_781],
    ...       [54_023, 22_454],
    ...       [69_874, 23_871, 99_518],
    ...       [55_638, 45_888]]
    ... ])
    [1]

    >>> store_with_worst_daily_sales([
    ...    [
    ...       [500_000, 500_000, 200_000],
    ...       [300_000, 500_000, 900_000],
    ...       [100_000, 150_000, 950_000],
    ...       [400_000, 200_000, 500_000, 500_000, 500_000],
    ...       [200_000, 300_000, 500_000, 100_000],
    ...       [250_000, 250_000, 400_000, 780_654],
    ...       [250_000, 250_000, 300_000, 970_815]
    ...    ],
    ...    [
    ...       [20_000, 20_000, 15_000],
    ...       [10_000, 10_000, 54_000],
    ...       [45_000, 78_000, 81_000],
    ...       [69_869, 54_879, 24_983],
    ...       [18_905, 12_841],
    ...       [74_915, 25_000, 44_581],
    ...       [54_000, 32_645, 23_414]
    ...    ],
    ...    [
    ...       [20_000, 20_000, 15_000],
    ...       [10_000, 10_000, 54_000],
    ...       [45_000, 78_000, 81_000],
    ...       [69_869, 54_879, 24_983],
    ...       [18_905, 12_841],
    ...       [74_915, 25_000, 44_581],
    ...       [54_000, 32_645, 23_414]
    ...    ],
    ...    [
    ...       [89_715, 20_000, 35_000],
    ...       [56_871, 99_423, 64_891],
    ...       [79_685, 487_963, 45_271, 56_879, 44_981],
    ...       [29_718, 56_919, 14_781],
    ...       [54_023, 22_454],
    ...       [69_874, 23_871, 99_518],
    ...       [55_638, 45_888]]
    ... ])
    [1, 2]
    """

    worst_daily_sales = float("inf");
    for store_sales in weekly_sales:
        for daily_sales in store_sales:
            daily_sales = sum(daily_sales)
            if daily_sales < worst_daily_sales:
                worst_daily_sales = daily_sales

    result = []
    for i, store_sales in enumerate(weekly_sales):
        for daily_sales in store_sales:
            daily_sales = sum(daily_sales)
            if daily_sales == worst_daily_sales:
                result.append(i)

    return result


def top_3_store_sales(weekly_sales):
    """
    >>> top_3_store_sales([
    ...    [
    ...       [500_000, 500_000, 200_000],
    ...       [300_000, 500_000, 900_000],
    ...       [100_000, 150_000, 950_000],
    ...       [400_000, 200_000, 500_000, 500_000, 500_000],
    ...       [200_000, 300_000, 500_000, 100_000],
    ...       [250_000, 250_000, 400_000, 780_654],
    ...       [250_000, 250_000, 300_000, 970_815]
    ...    ],
    ...    [
    ...       [20_000, 20_000, 15_000],
    ...       [10_000, 10_000, 54_000],
    ...       [45_000, 78_000, 81_000],
    ...       [69_869, 54_879, 24_983],
    ...       [18_905, 12_841],
    ...       [74_915, 25_000, 44_581],
    ...       [54_000, 32_645, 23_414]
    ...    ],
    ...    [
    ...       [89_715, 20_000, 35_000],
    ...       [56_871, 99_423, 64_891],
    ...       [79_685, 487_963, 45_271, 56_879, 44_981],
    ...       [29_718, 56_919, 14_781],
    ...       [54_023, 22_454],
    ...       [69_874, 23_871, 99_518],
    ...       [55_638, 45_888]]
    ... ])
    [[970815, 950000, 900000], [81000, 78000, 74915], [487963, 99518, 99423]]
    """

    top_sales = []
    top_to_show = 3

    for store_sales in weekly_sales:
        flat_store_sales = []
        for daily_sales in store_sales:
            for sale in daily_sales:
                flat_store_sales.append(sale)
        flat_store_sales.sort(reverse = True)
        top_store_sales = flat_store_sales[:top_to_show]
        top_sales.append(top_store_sales)

    return top_sales
